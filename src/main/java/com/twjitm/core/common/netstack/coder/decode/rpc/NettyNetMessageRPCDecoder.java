package com.twjitm.core.common.netstack.coder.decode.rpc;import com.twjitm.core.common.service.rpc.serialize.NettyProtoBufRpcSerialize;import com.twjitm.core.spring.SpringServiceManager;import io.netty.buffer.ByteBuf;import io.netty.channel.ChannelHandlerContext;import io.netty.handler.codec.ByteToMessageDecoder;import java.util.List;/** * @author twjitm - [Created on 2018-08-17 18:37] * @company https://github.com/twjitm/ * @jdk java version "1.8.0_77" */public class NettyNetMessageRPCDecoder extends ByteToMessageDecoder {    private Class<?> genericClass;    public NettyNetMessageRPCDecoder(Class<?> genericClass) {        this.genericClass = genericClass;    }    @Override    protected void decode(ChannelHandlerContext ctx, ByteBuf in, List<Object> out) throws Exception {        if (in.readableBytes() < 4) {            return;        }        in.markReaderIndex();        int dataLength = in.readInt();        /*if (dataLength <= 0) {            ctx.close();        }*/        if (in.readableBytes() < dataLength) {            in.resetReaderIndex();            return;        }        byte[] data = new byte[dataLength];        in.readBytes(data);        NettyProtoBufRpcSerialize serialize = SpringServiceManager.getSpringLoadService().getNettyProtoBufRpcSerialize();        Object obj = serialize.deserialize(data, genericClass);        out.add(obj);    }}